# -*- coding: utf-8 -*-
import os

# Form implementation generated from reading ui file 'scene_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QStringListModel, QThread, pyqtSignal
from PyQt5.QtGui import QPixmap, QIcon
from PyQt5.QtWidgets import QFileDialog, QTableWidgetItem, QHeaderView, QLabel
from openpyxl import load_workbook
from openpyxl.workbook import Workbook
from scene_diffusion import scene_txt2img
from datetime import datetime
from scene_gpt import scene_gpt

# diffusion线程类
class DrawingThread(QThread):
    # 更新进度的信号量
    progress_signal = pyqtSignal(int)
    # 更新日志的信号量
    string_signal = pyqtSignal(str)
    # 给表格设定值的信号量
    set_signal = pyqtSignal(int,int,str)

    def __init__(self, tableWidget):
        super(DrawingThread, self).__init__()
        self.tableWidget = tableWidget
        self.running = True

    def run(self):
        row = self.tableWidget.rowCount() - 1
        # 角标从0开始，所以要行数-1
        for i in range(row):
            if self.tableWidget.item(i, 2) is not None and self.tableWidget.item(i,
                                                                                 3) is not None and self.tableWidget.item(
                i, 0) is not None and self.running:
                prompt = self.tableWidget.item(i, 2).text()
                negative_prompt = self.tableWidget.item(i, 3).text()
                scene_filename = self.tableWidget.item(i, 0).text()
                scene_txt2img(prompt, negative_prompt, scene_filename)
                self.string_signal.emit(scene_filename + '.png保存完成')
                scene_filepath = 'images/' + scene_filename + '.png'
                self.set_signal.emit(i, 4, scene_filepath)
                # self.tableWidget.setItem(i, 4, QTableWidgetItem(str("已完成")))
                # 更新进度条的值
                self.progress_signal.emit(i + 1)
        self.string_signal.emit('绘画完成')
# GPT线程类
class GptThread(QThread):
    # 更新进度的信号量
    progress_signal = pyqtSignal(int)
    # 更新日志的信号量
    string_signal = pyqtSignal(str)
    # 给表格设定值的信号量
    set_signal = pyqtSignal(int,int,str)

    def __init__(self, tableWidget):
        super(GptThread, self).__init__()
        self.tableWidget = tableWidget
        self.running = True

    def run(self):
        # 角标从0开始，所以要行数-1
        row = self.tableWidget.rowCount() - 1
        for i in range(row):
            if self.tableWidget.item(i, 0) is not None and self.tableWidget.item(i, 1) is not None and self.running:
                scene_name = self.tableWidget.item(i, 0).text()
                input_prompt = self.tableWidget.item(i, 1).text()
                generated_prompt = scene_gpt(input_prompt)
                self.set_signal.emit(i, 2, str(generated_prompt))
                # self.tableWidget.setItem(i, 2, QTableWidgetItem(str(generated_prompt)))
                self.string_signal.emit('场景' + scene_name + '提示词推导完成')
                # 更新进度条的值
                self.progress_signal.emit(i + 1)
        self.string_signal.emit('提示词推导完成')
class Ui_Scene(object):
    def setupUi(self, Scene):
        Scene.setObjectName("Scene")
        Scene.resize(1711, 1041)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)

        Scene.setPalette(palette)
        # self.centralwidget = QtWidgets.QWidget(Scene)
        # self.centralwidget.setObjectName("centralwidget")
        self.DrawListView = QtWidgets.QListView(Scene)
        self.DrawListView.setGeometry(QtCore.QRect(1350, 11, 341, 241))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(24, 24, 24))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 24, 24))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 24, 24))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 24, 24))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 24, 24))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 24, 24))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 24, 24))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 24, 24))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(24, 24, 24))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)



        self.DrawListView.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("阿里巴巴普惠体")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.DrawListView.setFont(font)
        self.DrawListView.setStyleSheet("background-color: rgb(24, 24, 24); color: rgb(255, 255, 255);")
        self.DrawListView.setObjectName("DrawListView")
        self.tableWidget = QtWidgets.QTableWidget(Scene)
        self.tableWidget.setGeometry(QtCore.QRect(40, 270, 1651, 731))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget.sizePolicy().hasHeightForWidth())
        self.tableWidget.setSizePolicy(sizePolicy)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        font = QtGui.QFont()
        font.setFamily("阿里巴巴普惠体")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.tableWidget.setFont(font)
        self.widget = QtWidgets.QWidget(Scene)
        self.widget.setGeometry(QtCore.QRect(20, 10, 1331, 47))
        self.widget.setObjectName("widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.ImportConfigurationButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ImportConfigurationButton.sizePolicy().hasHeightForWidth())
        self.ImportConfigurationButton.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.ImportConfigurationButton.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("阿里巴巴普惠体")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.ImportConfigurationButton.setFont(font)
        self.ImportConfigurationButton.setStyleSheet("background-color: rgb(0, 104, 0);")
        self.ImportConfigurationButton.setObjectName("ImportConfigurationButton")
        self.horizontalLayout.addWidget(self.ImportConfigurationButton)
        self.SaveConfigurationButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SaveConfigurationButton.sizePolicy().hasHeightForWidth())
        self.SaveConfigurationButton.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.SaveConfigurationButton.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("阿里巴巴普惠体")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.SaveConfigurationButton.setFont(font)
        self.SaveConfigurationButton.setStyleSheet("background-color: rgb(0, 104, 0);")
        self.SaveConfigurationButton.setObjectName("SaveConfigurationButton")
        self.horizontalLayout.addWidget(self.SaveConfigurationButton)
        self.SuggestKeywordsButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SuggestKeywordsButton.sizePolicy().hasHeightForWidth())
        self.SuggestKeywordsButton.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.SuggestKeywordsButton.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("阿里巴巴普惠体")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.SuggestKeywordsButton.setFont(font)
        self.SuggestKeywordsButton.setStyleSheet("background-color: rgb(0, 104, 0);")
        self.SuggestKeywordsButton.setObjectName("SuggestKeywordsButton")
        self.horizontalLayout.addWidget(self.SuggestKeywordsButton)
        self.StartDrawingButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.StartDrawingButton.sizePolicy().hasHeightForWidth())
        self.StartDrawingButton.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.StartDrawingButton.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("阿里巴巴普惠体")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.StartDrawingButton.setFont(font)
        self.StartDrawingButton.setStyleSheet("background-color: rgb(0, 104, 0);")
        self.StartDrawingButton.setObjectName("StartDrawingButton")
        self.horizontalLayout.addWidget(self.StartDrawingButton)
        self.PauseButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PauseButton.sizePolicy().hasHeightForWidth())
        self.PauseButton.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(222, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.PauseButton.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("阿里巴巴普惠体")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.PauseButton.setFont(font)
        self.PauseButton.setStyleSheet("background-color: rgb(222, 0, 0);")
        self.PauseButton.setObjectName("PauseButton")
        self.horizontalLayout.addWidget(self.PauseButton)
        self.HighDefinitionButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.HighDefinitionButton.sizePolicy().hasHeightForWidth())
        self.HighDefinitionButton.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.HighDefinitionButton.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("阿里巴巴普惠体")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.HighDefinitionButton.setFont(font)
        self.HighDefinitionButton.setStyleSheet("background-color: rgb(0, 104, 0);")
        self.HighDefinitionButton.setObjectName("HighDefinitionButton")
        self.horizontalLayout.addWidget(self.HighDefinitionButton)
        self.ViewDrawFileButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ViewDrawFileButton.sizePolicy().hasHeightForWidth())
        self.ViewDrawFileButton.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 104, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.ViewDrawFileButton.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("阿里巴巴普惠体")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.ViewDrawFileButton.setFont(font)
        self.ViewDrawFileButton.setStyleSheet("background-color: rgb(0, 104, 0);")
        self.ViewDrawFileButton.setObjectName("ViewDrawFileButton")
        self.horizontalLayout.addWidget(self.ViewDrawFileButton)
        self.widget1 = QtWidgets.QWidget(Scene)
        self.widget1.setGeometry(QtCore.QRect(40, 60, 1291, 192))
        self.widget1.setObjectName("widget1")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget1)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.widget1)
        font = QtGui.QFont()
        font.setFamily("阿里巴巴普惠体")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.SuggestKeywordsProgressBar = QtWidgets.QProgressBar(self.widget1)
        font = QtGui.QFont()
        font.setFamily("阿里巴巴普惠体")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.SuggestKeywordsProgressBar.setFont(font)
        self.SuggestKeywordsProgressBar.setStyleSheet("QProgressBar {\n"
"   border: 2px solid grey;\n"
"   border-radius: 5px;\n"
"   background-color: #FFFFFF;\n"
"}\n"
"\n"
"QProgressBar::chunk {\n"
"   background-color: #0000FF;\n"
"   width: 20px;\n"
"}\n"
"\n"
"QProgressBar {\n"
"   border: 2px solid grey;\n"
"   border-radius: 5px;\n"
"   text-align: center;\n"
"}")
        self.SuggestKeywordsProgressBar.setProperty("value", 0)
        self.SuggestKeywordsProgressBar.setObjectName("SuggestKeywordsProgressBar")
        self.verticalLayout.addWidget(self.SuggestKeywordsProgressBar)
        self.label_2 = QtWidgets.QLabel(self.widget1)
        font = QtGui.QFont()
        font.setFamily("阿里巴巴普惠体")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.StartDrawingProgressBar = QtWidgets.QProgressBar(self.widget1)
        font = QtGui.QFont()
        font.setFamily("阿里巴巴普惠体")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.StartDrawingProgressBar.setFont(font)
        self.StartDrawingProgressBar.setStyleSheet("QProgressBar {\n"
"   border: 2px solid grey;\n"
"   border-radius: 5px;\n"
"   background-color: #FFFFFF;\n"
"}\n"
"\n"
"QProgressBar::chunk {\n"
"   background-color: #0000FF;\n"
"   width: 20px;\n"
"}\n"
"\n"
"QProgressBar {\n"
"   border: 2px solid grey;\n"
"   border-radius: 5px;\n"
"   text-align: center;\n"
"}")
        self.StartDrawingProgressBar.setProperty("value", 0)
        self.StartDrawingProgressBar.setObjectName("StartDrawingProgressBar")
        self.verticalLayout.addWidget(self.StartDrawingProgressBar)
        # Scene.setCentralWidget(self.centralwidget)
        # self.menubar = QtWidgets.QMenuBar(Scene)
        # self.menubar.setGeometry(QtCore.QRect(0, 0, 1711, 23))
        # self.menubar.setObjectName("menubar")
        # Scene.setMenuBar(self.menubar)
        # self.statusbar = QtWidgets.QStatusBar(Scene)
        # self.statusbar.setObjectName("statusbar")
        # Scene.setStatusBar(self.statusbar)

        self.retranslateUi(Scene)
        QtCore.QMetaObject.connectSlotsByName(Scene)



        self.log_data = []
        # 绑定button到槽函数
        self.ImportConfigurationButton.clicked.connect(self.open_file)
        self.SaveConfigurationButton.clicked.connect(self.save_file)
        self.StartDrawingButton.clicked.connect(self.startDrawingThread)
        self.SuggestKeywordsButton.clicked.connect(self.GptThread)
        self.PauseButton.clicked.connect(self.stop)
        self.ViewDrawFileButton.clicked.connect(self.viewfile)

    def retranslateUi(self, Scene):
        _translate = QtCore.QCoreApplication.translate
        Scene.setWindowTitle(_translate("Scene", "MainWindow"))
        self.ImportConfigurationButton.setText(_translate("Scene", "从Excel文件导入配置"))
        self.SaveConfigurationButton.setText(_translate("Scene", "保存配置到Excel文件"))
        self.SuggestKeywordsButton.setText(_translate("Scene", "推导提示词"))
        self.StartDrawingButton.setText(_translate("Scene", "开始绘画"))
        self.PauseButton.setText(_translate("Scene", "一键暂停"))
        self.HighDefinitionButton.setText(_translate("Scene", "一键高清"))
        self.ViewDrawFileButton.setText(_translate("Scene", "查看文件"))
        self.label.setText(_translate("Scene", "推导词进度"))
        self.label_2.setText(_translate("Scene", "画图进度"))

    def open_file(self):
        self.open_filepath, _ = QFileDialog.getOpenFileName(None, '选择Excel配置文件(路径尽量不要有中文)', '',
                                                   '(*.xlsx *.xls)')
        try:
            # 替换为单反斜杠
            self.open_filepath = str(self.open_filepath).replace("/", "\\").replace(":", ":")
            self.open_filename = os.path.basename(self.open_filepath)
            self.add_string_to_listView("打开文件路径" + self.open_filepath)
            print(self.open_filepath)
            self.loadExcelData()
        except:
            self.add_string_to_listView("取消打开文件")
            print("取消打开文件")

    def save_file(self):
        self.save_filepath, _ = QFileDialog.getSaveFileName(None, '保存Excel配置文件(路径尽量不要有中文)', '',
                                                   '(*.xlsx *.xls)')
        try:
            # 替换为单反斜杠
            self.save_filepath = str(self.save_filepath).replace("/", "\\").replace(":", ":")
            self.add_string_to_listView("保存文件路径" + self.save_filepath)
            print(self.save_filepath)
            self.saveExcelData()
        except:
            self.add_string_to_listView("取消保存文件")
            print("取消保存文件")

    def loadExcelData(self):
        # Load Excel data using openpyxl
        self.workbook = load_workbook(self.open_filepath)
        self.active_sheet = self.workbook.active

        # Set row count and column count in the table widget
        self.tableWidget.setRowCount(self.active_sheet.max_row)
        self.tableWidget.setColumnCount(self.active_sheet.max_column)

        # Set table headers using the first row of the Excel file
        # and include the column number
        headers = [f"{col_num + 1} - {cell.value}" for col_num, cell in enumerate(self.active_sheet[1])]
        self.tableWidget.setHorizontalHeaderLabels(headers)

        # Populate the table widget with Excel data
        for row in self.active_sheet.iter_rows():
            for cell in row:
                value = cell.value if cell.value is not None else ""
                self.tableWidget.setItem(cell.row - 2, cell.column - 1, QTableWidgetItem(str(value)))

        # Set row height
        for rowIndex in range(self.tableWidget.rowCount()):
            self.tableWidget.setRowHeight(rowIndex, 200)
        # 列自适应，(水平方向占满窗体)
        self.tableWidget.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        # 行自适应，(垂直方向占满窗体)
        # self.tableWidget.verticalHeader().setSectionResizeMode(QHeaderView.Stretch)

    def saveExcelData(self):
        # Create a new workbook and worksheet
        new_workbook = Workbook()
        new_worksheet = new_workbook.active

        # Write original headers to the new worksheet
        original_headers = [cell.value for cell in self.active_sheet[1]]  # Extract headers from the original sheet
        for col_num, header in enumerate(original_headers):
            new_worksheet.cell(row=1, column=col_num + 1, value=header)

        # Write data from QTableWidget to the new worksheet
        for row in range(self.tableWidget.rowCount()):
            for col in range(self.tableWidget.columnCount()):
                item = self.tableWidget.item(row, col)
                if item:
                    new_worksheet.cell(row=row + 2, column=col + 1,
                                       value=item.text())  # Start writing data from the second row

        # Save the new workbook to the provided file path
        new_workbook.save(self.save_filepath)

    def set_listView_content(self):
        # 使用QStringListModel来设置listView的数据
        model = QStringListModel()
        model.setStringList(self.log_data)
        self.DrawListView.setModel(model)

    def add_string_to_listView(self, new_string):
        # 获取当前时间
        current_time = datetime.now()
        # 将时间转换为字符串格式
        time_string = current_time.strftime('%m-%d %H:%M:%S ')
        new_string = time_string + new_string
        self.log_data.append(new_string)
        # 更新 listView 的内容
        self.set_listView_content()

    def set_tableWidget_value(self, row, column, value):
        if str(value).endswith('.png'):
            pixmap = QPixmap(str(value))  # Load the PNG image

            # Resize the image to fit the cell. You might want to fetch the cell size dynamically
            cell_width = self.tableWidget.columnWidth(column)
            cell_height = self.tableWidget.rowHeight(row)
            scaled_pixmap = pixmap.scaled(cell_width, cell_height)

            label = QLabel(self)
            label.setPixmap(scaled_pixmap)

            self.tableWidget.setCellWidget(row, column, label)

            # If the image is larger than the default cell size, you might want to resize the cell
            # self.tableWidget.setRowHeight(row, pixmap.height())
            # self.tableWidget.setColumnWidth(column, pixmap.width())
        else:
            self.tableWidget.setItem(row, column, QTableWidgetItem(str(value)))

    def startDrawingThread(self):
        self.add_string_to_listView("开始绘画...")
        row = self.tableWidget.rowCount() - 1
        column = self.tableWidget.columnCount()
        self.StartDrawingProgressBar.setValue(0)  # 设置进度条的最小值
        self.StartDrawingProgressBar.setMaximum(int(row))  # 设置进度条的最大值
        self.thread = DrawingThread(self.tableWidget)
        self.thread.progress_signal.connect(self.StartDrawingProgressBar.setValue)
        self.thread.string_signal.connect(self.add_string_to_listView)
        self.thread.set_signal.connect(self.set_tableWidget_value)
        self.thread.finished.connect(self.thread.deleteLater)
        self.thread.start()

    def GptThread(self):
        self.add_string_to_listView("开始推导提示词...")
        row = self.tableWidget.rowCount() - 1
        column = self.tableWidget.columnCount()
        self.thread = GptThread(self.tableWidget)
        self.SuggestKeywordsProgressBar.setValue(0)  # 设置进度条的最小值
        self.SuggestKeywordsProgressBar.setMaximum(int(row))  # 设置进度条的最大值

        self.thread.progress_signal.connect(self.SuggestKeywordsProgressBar.setValue)
        self.thread.string_signal.connect(self.add_string_to_listView)
        self.thread.set_signal.connect(self.set_tableWidget_value)
        self.thread.finished.connect(self.thread.deleteLater)
        self.thread.start()

    def stop(self):
        self.thread.running = False
        self.add_string_to_listView("所有操作已暂停")

    def viewfile(self):
        os.startfile('images')